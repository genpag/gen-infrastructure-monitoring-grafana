version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - yum update -y
      - yum install -y jq
      - pip install awscli
  pre_build:
    commands:
      - echo 'Iniciando a fase de pre_build...'
      - echo 'Buscando secrets do AWS Secrets Manager'
      - |
        SECRETS=$(aws secretsmanager get-secret-value --secret-id dev/grafana/config --query SecretString --output text)
        ADMIN_USER=$(echo $SECRETS | jq -r '.GRAFANA_ADMIN_USER')
        ADMIN_PASSWORD=$(echo $SECRETS | jq -r '.GRAFANA_ADMIN_PASSWD')
      - echo 'Substituindo credenciais no grafana.ini'
      - sed -i "s/ADMINUSER/${ADMIN_USER}/g" devops/configurationFiles/grafana.ini
      - sed -i "s/ADMINPASSWD/${ADMIN_PASSWORD}/g" devops/configurationFiles/grafana.ini
  build:
    commands:
      - echo 'Iniciando o build...'
      - echo 'Copiando arquivos de configuração e dashboards para o diretório de destino...'
      - mkdir -p /etc/grafana/provisioning/dashboards
      - cp devops/configurationFiles/grafana.ini /etc/grafana/grafana.ini
      - cp devops/configurationFiles/dashboards/*.json /etc/grafana/provisioning/dashboards/
      - mkdir -p /etc/tempo
      - cp devops/configurationFiles/tempo.yaml /etc/tempo/tempo.yaml
      - mkdir -p /etc/loki
      - cp devops/configurationFiles/loki.yaml /etc/loki/loki.yaml
      - mkdir -p /etc/prometheus
      - cp devops/configurationFiles/prometheus.yaml /etc/prometheus/prometheus.yaml
      - echo 'Validando o template CloudFormation'
      - aws cloudformation validate-template --template-body file://grafana-stack.yaml
      - echo 'Lendo parâmetros do arquivo parameters.json'
      - |
        PARAMETER_OVERRIDES=$(jq -r '.[] | "\(.ParameterKey)=\(.ParameterValue)"' devops/variables/parameters.json)
      - echo 'Fazendo deploy do stack CloudFormation'
      - |
        aws cloudformation deploy \
          --template-file grafana-stack.yaml \
          --stack-name grafana-stack \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameter-overrides $PARAMETER_OVERRIDES
      - echo 'Exibindo mudanças feitas no stack CloudFormation'
      - aws cloudformation describe-stack-events --stack-name grafana-stack --query 'StackEvents[?ResourceStatus==`UPDATE_COMPLETE`].{Resource:LogicalResourceId,Status:ResourceStatus,Reason:ResourceStatusReason}' --output table
  post_build:
    commands:
      - echo 'Iniciando a fase de post_build...'
      - echo 'Reiniciando containers para aplicar novas configurações'
      - aws ecs update-service --cluster dev-backend-services --service grafana-service --force-new-deployment

artifacts:
  files:
    - grafana-stack.yaml
    - devops/variables/parameters.json
    - devops/configurationFiles/grafana.ini
    - devops/configurationFiles/tempo.yaml
    - devops/configurationFiles/loki.yaml
    - devops/configurationFiles/prometheus.yaml